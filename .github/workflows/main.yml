name: Deploy API para MonsterASP

on:
  push:
    branches:
      - "master"
  workflow_dispatch:
    inputs:
      environment:
        description: 'Escolha o ambiente (staging ou production)'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Clonar repositório
        uses: actions/checkout@v4
      
      - name: Configurar .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
      
      - name: Restaurar dependências
        run: |
          dotnet restore ShieldJWT/ShieldJWT.csproj
          dotnet restore ShieldJWTLib/ShieldJWTLib.csproj
      
      - name: Compilar aplicação
        run: |
          dotnet build ShieldJWT/ShieldJWT.csproj --configuration Release --no-restore
          dotnet build ShieldJWTLib/ShieldJWTLib.csproj --configuration Release --no-restore
      
      - name: Publicar aplicação
        run: |
          if [[ "${{ github.ref }}" == *"staging"* || "${{ github.event.inputs.environment }}" == "staging" ]]; then
            dotnet publish ShieldJWT/ShieldJWT.csproj -c Release -o publish --property:Configuration=Staging
          else
            dotnet publish ShieldJWT/ShieldJWT.csproj -c Release -o publish --property:Configuration=Production
          fi

      - name: Listar arquivos antes do upload
        run: ls -la publish
          
      - name: Deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: publish/
          server-dir: /wwwroot/
